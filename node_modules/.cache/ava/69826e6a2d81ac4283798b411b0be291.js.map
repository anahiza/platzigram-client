{"version":3,"sources":["client-test.js"],"names":["test","require","platzigram","fixtures","nock","options","endpoints","pictures","users","auth","beforeEach","t","context","client","createClient","is","getPicture","savePicture","likePicture","listPictures","listPicturesByTag","saveUser","getUser","image","getImage","get","publicId","reply","result","deepEqual"],"mappings":"AAAA;;;;;;;;;;;AACA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,aAAaD,QAAQ,UAAR,CAAnB;AACA,MAAME,WAAWF,QAAQ,YAAR,CAAjB;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAII,UAAU;AACZC,aAAW;AACTC,cAAU,gCADD;AAETC,WAAO,6BAFE;AAGTC,UAAM;AAHG;AADC,CAAd;;AAQAT,KAAKU,UAAL,CAAgBC,KAAK;AACnBA,IAAEC,OAAF,CAAUC,MAAV,GAAmBX,WAAWY,YAAX,EAAnB;AACD,CAFD;;AAIAd,KAAK,QAAL,EAAeW,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAClB,QAAME,SAASF,EAAEC,OAAF,CAAUC,MAAzB;AACAF,IAAEI,EAAF,uBAAK,kBAAO,kDAAOC,UAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA+B,UAA/B;AACAL,IAAEI,EAAF,yBAAK,mBAAO,mDAAOE,WAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAgC,UAAhC;AACAN,IAAEI,EAAF,yBAAK,mBAAO,mDAAOG,WAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAgC,UAAhC;AACAP,IAAEI,EAAF,yBAAK,mBAAO,mDAAOI,YAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAiC,UAAjC;AACAR,IAAEI,EAAF,yBAAK,mBAAO,mDAAOK,iBAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAsC,UAAtC;AACAT,IAAEI,EAAF,yBAAK,mBAAO,mDAAOM,QAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA6B,UAA7B;AACAV,IAAEI,EAAF,yBAAK,mBAAO,mDAAOO,OAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA4B,UAA5B;AACAX,IAAEI,EAAF,yBAAK,mBAAO,mDAAON,IAAd,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyB,UAAzB;AACD,CAVD;;AAYAT,KAAK,YAAL;AAAA,6CAAmB,WAAMW,CAAN,EAAW;AAAA;AAAA;;AAC5B,UAAME,SAASF,EAAEC,OAAF,CAAUC,MAAzB;AACA,QAAIU,QAAQpB,SAASqB,QAAT,EAAZ;AACApB,SAAKC,QAAQC,SAAR,CAAkBC,QAAvB,EACGkB,GADH,CACQ,IAAGF,MAAMG,QAAS,EAD1B,EAEGC,KAFH,CAES,GAFT,EAEcJ,KAFd;AAGA,QAAIK,SAAS,MAAMf,OAAOG,UAAP,CAAkBO,MAAMG,QAAxB,CAAnB;AACAf,MAAEkB,SAAF,yBAAYN,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAmBK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GARD;;AAAA;AAAA;AAAA;AAAA","file":"client-test.js","sourcesContent":["'use strict'\r\nconst test = require('ava')\r\nconst platzigram = require('../index')\r\nconst fixtures = require('./fixtures')\r\nconst nock = require('nock')\r\nlet options = {\r\n  endpoints: {\r\n    pictures: 'http://platzigram.test/picture',\r\n    users: 'http://platzigram.test/user',\r\n    auth: 'http://platzigram.test/auth'\r\n  }\r\n}\r\n\r\ntest.beforeEach(t => {\r\n  t.context.client = platzigram.createClient()\r\n})\r\n\r\ntest('client', t => {\r\n  const client = t.context.client\r\n  t.is(typeof client.getPicture, 'function')\r\n  t.is(typeof client.savePicture, 'function')\r\n  t.is(typeof client.likePicture, 'function')\r\n  t.is(typeof client.listPictures, 'function')\r\n  t.is(typeof client.listPicturesByTag, 'function')\r\n  t.is(typeof client.saveUser, 'function')\r\n  t.is(typeof client.getUser, 'function')\r\n  t.is(typeof client.auth, 'function')\r\n})\r\n\r\ntest('getPicture', async t => {\r\n  const client = t.context.client\r\n  let image = fixtures.getImage()\r\n  nock(options.endpoints.pictures)\r\n    .get(`/${image.publicId}`)\r\n    .reply(200, image)\r\n  let result = await client.getPicture(image.publicId)\r\n  t.deepEqual(image, result)\r\n})\r\n"]}